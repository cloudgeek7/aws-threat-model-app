stages:
  - build
#  - deploy

image: docker:20.10
services:
  - docker:20.10-dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  BULK_MIGRATE: "true"
  ECR_REPOSITORY: "041691160205.dkr.ecr.us-east-1.amazonaws.com/threat-model-app"

# Build stage to create the Docker image and push to AWS ECR
build:
  stage: build
  image: docker:20.10.14
  services:
    - docker:dind
  script:
    - echo "Building Docker image..."
    - docker build -t threat-model-app .
    - docker tag threat-model-app $ECR_REPOSITORY:latest
    - docker images
    # Install required tools
    - apk add --no-cache aws-cli jq

    # Verify AWS credentials
    - aws sts get-caller-identity

    # Log in to registries
    - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker images
    - echo "Pushing image to ECR..."
    - docker push $ECR_REPOSITORY:latest  # Push tagged image to ECR    
  only:
    - master


#deploy:
#  stage: deploy
#  image: hashicorp/terraform:1.3
#  before_script:
#    - apk add --no-cache bash curl jq
#  script:
#    - cd terraform
#    - terraform init
#    - terraform apply -auto-approve
#  only:
#    - main
 
